{
  "openapi": "3.0.1",
  "x-important" : "IMPORTANT:  This OpenAPI Specification is only for use in accordance with the terms of the Apple Developer Program License Agreement.  You may not use this OpenAPI Specification unless you have agreed to the Apple Developer Program License Agreement.",
  "info": {
    "title": "SiriKit Cloud Media",
    "version": "1.0.2",
    "x-platform": "sirikit_media_api",
    "contact": {
      "name": "Siri for Developers",
      "url": "https://developer.apple.com/siri/"
    }
  },
  "tags": [
    {
      "name": "config"
    },
    {
      "name": "intent"
    },
    {
      "name": "queues"
    }
  ],
  "servers": [
    {
      "url": "https://cloudextension-testservice.local/api"
    }
  ],
  "paths": {
    "/configuration": {
      "get": {
        "tags": [
          "config"
        ],
        "summary": "Configuration Resource",
        "operationId": "extensionConfiguration",
        "parameters": [
          {
            "name": "x-applecloudextension-session-id",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "required": true
          },
          {
            "name": "x-applecloudextension-retry-count",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "name": "Request-Timeout",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "pattern": "AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*",
              "maxLength": 250
            },
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "If-None-Match",
            "in": "header",
            "schema": {
              "$ref": "#/components/schemas/ExtensionConfigTag"
            }
          },
          {
            "name": "Cache-Control",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK Response",
            "headers": {
              "x-applecloudextension-session-id": {
                "schema": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                }
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "example": "max-age=1800, must-revalidate, private",
                "required": true
              },
              "ETag": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionConfigTag"
                },
                "required": true
              }
            },
            "content": {
              "application/jose": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionConfig"
                }
              }
            }
          },
          "304": {
            "description": "Not Modified Response",
            "headers": {
              "x-applecloudextension-session-id": {
                "schema": {
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1
                }
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "example": "max-age=1800, must-revalidate, private",
                "required": true
              }
            }
          }
        }
      }
    },
    "/intent/playMedia": {
      "post": {
        "tags": [
          "intent"
        ],
        "summary": "playMedia",
        "operationId": "playMediaIntentHandling",
        "parameters": [
          {
            "name": "x-applecloudextension-session-id",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "required": true
          },
          {
            "name": "x-applecloudextension-retry-count",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "name": "Request-Timeout",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "pattern": "AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*",
              "maxLength": 250
            },
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlayMediaIntentHandlingInvocation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "headers": {
              "x-applecloudextension-session-id": {
                "schema": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PlayMediaIntentHandlingInvocationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/intent/addMedia": {
      "post": {
        "tags": [
          "intent"
        ],
        "summary": "addMedia",
        "operationId": "addMediaIntentHandling",
        "parameters": [
          {
            "name": "x-applecloudextension-session-id",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "required": true
          },
          {
            "name": "x-applecloudextension-retry-count",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "name": "Request-Timeout",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "pattern": "AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*",
              "maxLength": 250
            },
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddMediaIntentHandlingInvocation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "headers": {
              "x-applecloudextension-session-id": {
                "schema": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddMediaIntentHandlingInvocationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/intent/updateMediaAffinity": {
      "post": {
        "tags": [
          "intent"
        ],
        "summary": "updateMediaAffinity",
        "operationId": "updateMediaAffinityIntentHandling",
        "parameters": [
          {
            "name": "x-applecloudextension-session-id",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "required": true
          },
          {
            "name": "x-applecloudextension-retry-count",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "name": "Request-Timeout",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": true
          },
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "pattern": "AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*",
              "maxLength": 250
            },
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "headers": {
              "x-applecloudextension-session-id": {
                "schema": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateMediaAffinityIntentHandlingInvocationResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/queues/playMedia": {
      "post": {
        "tags": [
          "queues"
        ],
        "summary": "playMedia",
        "operationId": "playMediaOnQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlayMediaRequest"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "x-applecloudextension-session-id",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "required": true
          },
          {
            "name": "x-applecloudextension-retry-count",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "pattern": "AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*",
              "maxLength": 250
            },
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Queue"
                }
              }
            }
          },
          "204": {
            "description": "204 No Content"
          },
          "401": {
            "description": "401 Not Authorized"
          },
          "410": {
            "description": "410 Gone"
          }
        }
      }
    },
    "/queues/updateActivity": {
      "post": {
        "tags": [
          "queues"
        ],
        "summary": "updateActivity",
        "operationId": "updateActivityOnQueue",
        "parameters": [
          {
            "name": "x-applecloudextension-session-id",
            "in": "header",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            "required": true
          },
          {
            "name": "x-applecloudextension-retry-count",
            "in": "header",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "required": false
          },
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "pattern": "AppleCloudExtension/([0-9]+\\.[0-9]+\\.[0-9]+) *.*",
              "maxLength": 250
            },
            "required": true
          },
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActivityRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateActivityResponse"
                }
              }
            }
          },
          "204": {
            "description": "204 Not Modified"
          },
           
          "401": {
            "description": "401 Unauthorized"
          },
          "404": {
            "description": "404 Not Found"
          },
          "410": {
            "description": "410 Gone"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ServiceDebugReference": {
        "type": "string",
        "format": "uri",
        "maxLength": 2000
      },
      "PlayMediaRequest": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
          },
          "userActivity": {
            "$ref": "#/components/schemas/UserActivity"
          },
          "constraints": {
            "$ref": "#/components/schemas/Constraints"
          }
        },
        "required": [
          "version",
          "userActivity",
          "constraints"
        ]
      },
      "PlayMediaControlScheme": {
        "type": "string",
        "enum": [
          "custom",
          "onDemand",
          "internetRadio",
          "liveStreaming",
          "audioBook",
          "podcast",
          "advertisement"
        ]
      },
      "PlayMediaControlActivity": {
        "type": "object",
        "properties": {
          "playElapsed": {
            "type": "integer",
            "minimum": 5
          },
          "playElapsedInterval": {
            "type": "integer",
            "minimum": 5
          },
          "playPaused": {
            "type": "integer",
            "default": 5,
            "minimum": 5,
            "maximum": 60
          }
        }
      },
      "PlayMediaControlCommandSet": {
        "type": "object",
        "properties": {
          "nextTrack": {
            "type": "boolean"
          },
          "previousTrack": {
            "type": "boolean"
          },
          "skipForward": {
            "type": "boolean"
          },
          "preferSkipForward": {
            "type": "boolean"
          },
          "skipBackward": {
            "type": "boolean"
          },
          "preferSkipBackward": {
            "type": "boolean"
          },
          "likeTrack": {
            "type": "boolean"
          },
          "dislikeTrack": {
            "type": "boolean"
          },
          "bookmarkTrack": {
            "type": "boolean"
          },
          "seekToPlaybackPosition": {
            "type": "boolean"
          }
        }
      },
      "PlayMediaControl": {
        "required": [
          "scheme"
        ],
        "type": "object",
        "properties": {
          "scheme": {
            "$ref": "#/components/schemas/PlayMediaControlScheme"
          },
          "activity": {
            "$ref": "#/components/schemas/PlayMediaControlActivity"
          },
          "commands": {
            "$ref": "#/components/schemas/PlayMediaControlCommandSet"
          }
        }
      },
      "QueueInsertPointer": {
        "properties": {
          "afterIdentifier": {
            "$ref": "#/components/schemas/ContentIdentifier"
          },
          "replace": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "QueueIdentifier": {
        "type": "string",
        "example": "u104823q8201",
        "minLength": 1,
        "maxLength": 1024
      },
      "QueuePlayPointer": {
        "type": "object",
        "properties": {
          "contentIdentifier": {
            "$ref": "#/components/schemas/ContentIdentifier"
          },
          "offsetInMillis": {
            "type": "integer",
            "format": "int64",
            "example": 10942
          }
        },
        "nullable": true
      },
      "QueueControlMapping": {
        "type": "object",
        "properties": {
          "default": {
            "$ref": "#/components/schemas/PlayMediaControl"
          }
        },
        "additionalProperties": {
          "$ref": "#/components/schemas/PlayMediaControl"
        },
        "required": [
          "default"
        ]
      },
      "Queue": {
        "type": "object",
        "required": [
          "version",
          "identifier",
          "content"
        ],
        "properties": {
          "version": {
            "type": "string",
            "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+",
            "maxLength": 25
          },
          "identifier": {
            "$ref": "#/components/schemas/QueueIdentifier"
          },
          "insertPointer": {
            "$ref": "#/components/schemas/QueueInsertPointer"
          },
          "playPointer": {
            "$ref": "#/components/schemas/QueuePlayPointer"
          },
          "controls": {
            "$ref": "#/components/schemas/QueueControlMapping"
          },
          "skipsRemaining": {
            "type": "integer",
            "nullable": true
          },
          "contentItemsCount": {
            "type": "integer",
            "nullable": true
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Content"
            },
            "maxItems": 1000
          },
          "previousContentUrl": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "nullable": true
          },
          "nextContentUrl": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "nullable": true
          },
          "prerollSeconds": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ContentIdentifier": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1000,
        "example": "j15f8A3cuU0GG"
      },
      "ContentAttributes": {
        "type": "object",
        "properties": {
          "artistName": {
            "type": "string",
            "example": "Bob Dylan",
            "maxLength": 1000
          },
          "artwork": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "maxLength": 2000
              }
            }
          },
          "genreNames": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 250
            },
            "maxItems": 30
          },
          "durationInMillis": {
            "type": "integer",
          },
          "name": {
            "type": "string",
            "example": "Tangled Up In Blue",
            "maxLength": 250
          },
          "albumName": {
            "type": "string",
            "example": "Blood On the Tracks",
            "maxLength": 250
          },
          "trackNumber": {
            "type": "integer",
            "example": 1
          },
          "composerName": {
            "type": "string",
            "example": "B. Dylan",
            "maxLength": 250
          }
        }
      },
      "Content": {
        "type": "object",
        "required": [
          "identifier"
        ],
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/ContentIdentifier"
          },
          "playIndex": {
            "type": "integer",
          },
          "control": {
            "default": "default",
            "type": "string",
            "example": "song"
          },
          "url": {
            "type": "string",
            "maxLength": 2000
          },
          "isLive": {
            "type": "boolean"
          },
          "attributes": {
            "$ref": "#/components/schemas/ContentAttributes"
          }
        }
      },
      "QueueActivityReportEvent": {
        "type": "string",
        "enum": [
          "local.playing.elapsed",
          "local.playing.paused",
          "local.playing.continued",
          "local.playing.scrub",
          "local.playing.fastForward",
          "local.playing.fastRewind",
          "local.playing.transitioned.naturally",
          "local.playing.transitioned.skip_next",
          "local.playing.transitioned.skip_previous",
          "local.playing.transitioned.queue_replaced",
          "local.stopped.naturally",
          "local.stopped.skip_past_end",
          "local.command.like",
          "local.command.dislike",
          "local.command.bookmark"
        ]
      },
      "UpdateActivityRequest": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "report": {
            "$ref": "#/components/schemas/QueueActivityReportEvent"
          },
          "nowPlaying": {
            "$ref": "#/components/schemas/PlayerContext"
          },
          "previouslyPlaying": {
            "$ref": "#/components/schemas/PlayerContext"
          },
          "constraints": {
            "$ref": "#/components/schemas/Constraints"
          },
          "userActivity": {
            "$ref": "#/components/schemas/UserActivity"
          }
        },
        "required": [
          "version",
          "timestamp",
          "report",
          "userActivity"
        ]
      },
      "UpdateActivityResponse": {
        "type": "object",
        "properties": {
          "userActivity": {
            "$ref": "#/components/schemas/UserActivity"
          },
          "queue": {
            "$ref": "#/components/schemas/Queue"
          }
        }
      },
      "Intent": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "class",
          "mapping": {
            "PlayMediaIntent": "#/components/schemas/PlayMediaIntent",
            "AddMediaIntent": "#/components/schemas/AddMediaIntent",
            "UpdateMediaAffinityIntent": "#/components/schemas/UpdateMediaAffinityIntent"
          }
        },
        "required": [
          "class",
          "identifier"
        ]
      },
      "IntentResponse": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string"
          },
          "userActivity": {
            "$ref": "#/components/schemas/UserActivity"
          }
        },
        "required": [
          "class",
          "userActivity"
        ],
        "discriminator": {
          "propertyName": "class",
          "mapping": {
            "PlayMediaIntentResponse": "#/components/schemas/PlayMediaIntentResponse",
            "AddMediaIntentResponse": "#/components/schemas/AddMediaIntentResponse",
            "UpdateMediaAffinityIntentResponse": "#/components/schemas/UpdateMediaAffinityIntentResponse"
          }
        }
      },
      "PlayMediaIntentResponseCode": {
        "type": "string",
        "enum": [
          "unspecified",
          "success",
          "failure",
          "failureRequiringAppLaunch",
          "failureUnknownMediaType",
          "failureNoUnplayedContent",
          "failureRestrictedContent"
        ]
      },
      "PlayMediaIntentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResponse"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "PlayMediaIntentResponse"
            ]
          },
          "code": {
            "$ref": "#/components/schemas/PlayMediaIntentResponseCode"
          }
        },
        "required": [
          "class",
          "code"
        ]
      },
      "PlayMediaIntent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Intent"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "PlayMediaIntent"
            ]
          },
          "mediaItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaItem"
            }
          },
          "playShuffled": {
            "type": "boolean"
          },
          "playbackRepeatMode": {
            "$ref": "#/components/schemas/PlaybackRepeatMode"
          },
          "resumePlayback": {
            "type": "boolean"
          },
          "playbackQueueLocation": {
            "$ref": "#/components/schemas/PlaybackQueueLocation"
          },
          "playbackSpeed": {
            "type": "number",
            "format": "double"
          },
          "mediaSearch": {
            "$ref": "#/components/schemas/MediaSearch"
          }
        }
      },
      "AddMediaMediaItemUnsupportedReason": {
        "type": "string",
        "enum": [
          "loginRequired",
          "subscriptionRequired",
          "unsupportedMediaType",
          "explicitContentSettings",
          "restrictedContent",
          "regionRestriction"
        ]
      },
      "AddMediaMediaDestinationUnsupportedReason": {
        "type": "string",
        "enum": [
          "playlistNameNotFound",
          "playlistNotEditable"
        ]
      },
      "AddMediaIntentResponseCode": {
        "type": "string",
        "enum": [
          "unspecified",
          "ready",
          "inProgress",
          "success",
          "failure",
          "failureRequiringAppLaunch"
        ]
      },
      "AddMediaIntentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResponse"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "AddMediaIntentResponse"
            ]
          },
          "code": {
            "$ref": "#/components/schemas/AddMediaIntentResponseCode"
          }
        },
        "required": [
          "class",
          "code"
        ]
      },
      "AddMediaIntent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Intent"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "AddMediaIntent"
            ]
          },
          "mediaItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaItem"
            }
          },
          "mediaSearch": {
            "$ref": "#/components/schemas/MediaSearch"
          },
          "mediaDestination": {
            "$ref": "#/components/schemas/MediaDestination"
          }
        },
        "required": [
          "class"
        ]
      },
      "UpdateMediaAffinityMediaItemUnsupportedReason": {
        "type": "string",
        "enum": [
          "loginRequired",
          "subscriptionRequired",
          "unsupportedMediaType",
          "explicitContentSettings"
        ]
      },
      "UpdateMediaAffinityIntentResponseCode": {
        "type": "string",
        "enum": [
          "unspecified",
          "inProgress",
          "success",
          "failure",
          "failureRequiringAppLaunch"
        ]
      },
      "UpdateMediaAffinityIntentResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResponse"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "UpdateMediaAffinityIntentResponse"
            ]
          },
          "code": {
            "$ref": "#/components/schemas/UpdateMediaAffinityIntentResponseCode"
          }
        },
        "required": [
          "class",
          "code"
        ]
      },
      "MediaAffinityType": {
        "type": "string",
        "enum": [
          "unknown",
          "like",
          "dislike"
        ]
      },
      "UpdateMediaAffinityIntent": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Intent"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "UpdateMediaAffinityIntent"
            ]
          },
          "affinityType": {
            "$ref": "#/components/schemas/MediaAffinityType"
          },
          "mediaItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaItem"
            }
          },
          "mediaSearch": {
            "$ref": "#/components/schemas/MediaSearch"
          }
        },
        "required": [
          "class"
        ]
      },
      "MediaDestination": {
        "type": "object",
        "properties": {
          "mediaDestinationType": {
            "type": "string",
            "enum": [
              "library",
              "playlist"
            ]
          }
        },
        "required": [
          "mediaDestinationType"
        ],
        "discriminator": {
          "propertyName": "mediaDestinationType",
          "mapping": {
            "library": "#/components/schemas/MediaDestinationLibrary",
            "playlist": "#/components/schemas/MediaDestinationPlaylist"
          }
        }
      },
      "MediaDestinationLibrary": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MediaDestination"
          }
        ],
        "type": "object",
        "properties": {
          "mediaDestinationType": {
            "type": "string",
            "enum": [
              "library"
            ]
          }
        },
        "required": [
          "mediaDestinationType"
        ]
      },
      "MediaDestinationPlaylist": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MediaDestination"
          }
        ],
        "type": "object",
        "properties": {
          "mediaDestinationType": {
            "type": "string",
            "enum": [
              "playlist"
            ]
          },
          "playlistName": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1
          }
        },
        "required": [
          "mediaDestinationType",
          "playlistName"
        ]
      },
      "MediaSearch": {
        "type": "object",
        "properties": {
          "mediaType": {
            "$ref": "#/components/schemas/MediaItemType"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/MediaSortOrder"
          },
          "mediaName": {
            "type": "string"
          },
          "artistName": {
            "type": "string"
          },
          "albumName": {
            "type": "string"
          },
          "genreNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "moodNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "releaseDate": {
            "$ref": "#/components/schemas/DateComponentsRange"
          },
          "reference": {
            "$ref": "#/components/schemas/MediaReference"
          },
          "mediaIdentifier": {
            "type": "string"
          }
        }
      },
      "MediaReference": {
        "type": "string",
        "enum": [
          "unknown",
          "currentlyPlaying",
          "my"
        ]
      },
      "ExplicitDateComponents": {
        "type": "object",
        "properties": {
          "calendarIdentifier": {
            "type": "string"
          },
          "era": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nanosecond": {
            "type": "integer",
            "format": "int32"
          },
          "timeZone": {
            "type": "string"
          }
        }
      },
      "DateComponents": {
        "example": "1980",
        "oneOf": [
          {
            "type": "string",
            "pattern": "[0-9]{4}"
          },
          {
            "type": "string",
            "pattern": "[0-9]{4}-[0-9]{2}"
          },
          {
            "type": "string",
            "format": "date"
          },
          {
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/components/schemas/ExplicitDateComponents"
          }
        ]
      },
      "DateComponentsRange": {
        "type": "object",
        "properties": {
          "startDateComponents": {
            "$ref": "#/components/schemas/DateComponents"
          },
          "endDateComponents": {
            "$ref": "#/components/schemas/DateComponents"
          }
        }
      },
      "MediaSortOrder": {
        "type": "string",
        "enum": [
          "unknown",
          "newest",
          "oldest",
          "best",
          "worst",
          "popular",
          "unpopular",
          "trending",
          "recommended"
        ]
      },
      "PlaybackRepeatMode": {
        "type": "string",
        "enum": [
          "unknown",
          "none",
          "all",
          "one"
        ]
      },
      "PlaybackQueueLocation": {
        "type": "string",
        "enum": [
          "unknown",
          "now",
          "next",
          "later"
        ]
      },
      "MediaItemType": {
        "type": "string",
        "enum": [
          "unknown",
          "song",
          "album",
          "artist",
          "genre",
          "playlist",
          "podcastShow",
          "podcastEpisode",
          "podcastPlaylist",
          "musicStation",
          "audioBook",
          "movie",
          "tvShow",
          "tvShowEpisode",
          "musicVideo",
          "podcastStation",
          "radioStation",
          "station",
          "music",
          "algorithmicRadioStation",
          "news"
        ]
      },
      "MediaItem": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/MediaItemType"
          },
          "identifier": {
            "type": "string",
            "maxLength": 250
          },
          "title": {
            "type": "string",
            "maxLength": 1000,
            "readOnly": true
          },
          "artist": {
            "type": "string",
            "maxLength": 1000,
            "readOnly": true
          }
        },
        "required": [
          "type",
          "identifier"
        ]
      },
      "PlayMediaMediaItemUnsupportedReason": {
        "type": "string",
        "enum": [
          "loginRequired",
          "subscriptionRequired",
          "unsupportedMediaType",
          "explicitContentSettings",
          "restrictedContent",
          "regionRestriction"
        ]
      },
      "IntentResolutionResult": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string"
          },
          "needsValue": {
            "type": "object",
            "x-flow-exception": "Failure"
          },
          "notRequired": {
            "type": "object"
          },
          "unsupported": {
            "type": "object",
            "x-flow-exception": "Failure"
          }
        },
        "required": [
          "class"
        ],
        "discriminator": {
          "propertyName": "class",
          "mapping": {
            "BooleanResolutionResult": "#/components/schemas/BooleanResolutionResult",
            "PlayMediaMediaItemResolutionResult": "#/components/schemas/PlayMediaMediaItemResolutionResult",
            "AddMediaMediaItemResolutionResult": "#/components/schemas/AddMediaMediaItemResolutionResult",
            "PlaybackQueueLocationResolutionResult": "#/components/schemas/PlaybackQueueLocationResolutionResult",
            "UpdateMediaAffinityMediaItemResolutionResult": "#/components/schemas/UpdateMediaAffinityMediaItemResolutionResult",
            "MediaAffinityTypeResolutionResult": "#/components/schemas/MediaAffinityTypeResolutionResult"
          }
        }
      },
      "BooleanResolutionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResolutionResult"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "BooleanResolutionResult"
            ]
          },
          "success": {
            "type": "object",
            "properties": {
              "resolvedValue": {
                "type": "boolean"
              }
            },
            "required": [
              "resolvedValue"
            ]
          },
          "confirmationRequired": {
            "type": "object",
            "properties": {
              "valueToConfirm": {
                "type": "boolean"
              }
            },
            "required": [
              "valueToConfirm"
            ],
            "x-flow-exception": "Requires Confirmation"
          }
        }
      },
      "PlayMediaMediaItemResolutionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResolutionResult"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "PlayMediaMediaItemResolutionResult"
            ]
          },
          "success": {
            "type": "object",
            "properties": {
              "resolvedMediaItem": {
                "$ref": "#/components/schemas/MediaItem"
              }
            },
            "required": [
              "resolvedMediaItem"
            ]
          },
          "disambiguation": {
            "type": "object",
            "properties": {
              "mediaItemsToDisambiguate": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MediaItem"
                },
                "minItems": 2
              }
            },
            "required": [
              "mediaItemsToDisambiguate"
            ],
            "x-flow-exception": "Requires Disambiguation"
          },
          "confirmationRequired": {
            "type": "object",
            "properties": {
              "mediaItemToConfirm": {
                "$ref": "#/components/schemas/MediaItem"
              }
            },
            "required": [
              "mediaItemToConfirm"
            ],
            "x-flow-exception": "Requires Confirmation"
          },
          "unsupported": {
            "type": "object",
            "properties": {
              "reason": {
                "$ref": "#/components/schemas/PlayMediaMediaItemUnsupportedReason"
              }
            },
            "x-flow-exception": "Unsupported"
          }
        }
      },
      "AddMediaMediaItemResolutionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResolutionResult"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "AddMediaMediaItemResolutionResult"
            ]
          },
          "success": {
            "type": "object",
            "properties": {
              "resolvedMediaItem": {
                "$ref": "#/components/schemas/MediaItem"
              }
            },
            "required": [
              "resolvedMediaItem"
            ]
          },
          "disambiguation": {
            "type": "object",
            "properties": {
              "mediaItemsToDisambiguate": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MediaItem"
                },
                "minItems": 2
              }
            },
            "required": [
              "mediaItemsToDisambiguate"
            ]
          },
          "confirmationRequired": {
            "type": "object",
            "properties": {
              "mediaItemToConfirm": {
                "$ref": "#/components/schemas/MediaItem"
              }
            },
            "required": [
              "mediaItemToConfirm"
            ],
            "x-flow-exception": "Requires Confirmation"
          },
          "unsupported": {
            "type": "object",
            "properties": {
              "reason": {
                "$ref": "#/components/schemas/AddMediaMediaItemUnsupportedReason"
              }
            },
            "x-flow-exception": "Unsupported"
          }
        }
      },
      "AddMediaMediaDestinationResolutionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResolutionResult"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "AddMediaMediaDestinationResolutionResult"
            ]
          },
          "success": {
            "type": "object",
            "properties": {
              "resolvedMediaDestination": {
                "$ref": "#/components/schemas/MediaDestination"
              }
            },
            "required": [
              "resolvedMediaDestination"
            ]
          },
          "disambiguation": {
            "type": "object",
            "properties": {
              "mediaDestinationsToDisambiguate": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MediaDestination"
                },
                "minItems": 2
              }
            },
            "required": [
              "mediaDestinationsToDisambiguate"
            ],
            "x-flow-exception": "Requires Disambiguation"
          },
          "confirmationRequired": {
            "type": "object",
            "properties": {
              "mediaDestinationToConfirm": {
                "$ref": "#/components/schemas/MediaDestination"
              }
            },
            "required": [
              "mediaDestinationToConfirm"
            ],
            "x-flow-exception": "Requires Confirmation"
          },
          "unsupported": {
            "type": "object",
            "properties": {
              "reason": {
                "$ref": "#/components/schemas/AddMediaMediaDestinationUnsupportedReason"
              }
            },
            "x-flow-exception": "Unsupported"
          }
        }
      },
      "PlaybackQueueLocationResolutionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResolutionResult"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "PlaybackQueueLocationResolutionResult"
            ]
          },
          "success": {
            "type": "object",
            "properties": {
              "resolvedPlaybackQueueLocation": {
                "$ref": "#/components/schemas/PlaybackQueueLocation"
              }
            },
            "required": [
              "resolvedPlaybackQueueLocation"
            ]
          },
          "confirmationRequired": {
            "type": "object",
            "properties": {
              "playbackQueueLocationToConfirm": {
                "$ref": "#/components/schemas/PlaybackQueueLocation"
              }
            },
            "required": [
              "playbackQueueLocationToConfirm"
            ],
            "x-flow-exception": "Requires Confirmation"
          }
        }
      },
      "PlaybackRepeatModeResolutionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResolutionResult"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "PlaybackRepeatModeResolutionResult"
            ]
          },
          "success": {
            "type": "object",
            "properties": {
              "resolvedPlaybackRepeatMode": {
                "$ref": "#/components/schemas/PlaybackRepeatMode"
              }
            },
            "required": [
              "resolvedPlaybackRepeatMode"
            ]
          },
          "confirmationRequired": {
            "type": "object",
            "properties": {
              "playbackRepeatModeToConfirm": {
                "$ref": "#/components/schemas/PlaybackRepeatMode"
              }
            },
            "required": [
              "playbackRepeatModeToConfirm"
            ],
            "x-flow-exception": "Requires Confirmation"
          }
        }
      },
      "UpdateMediaAffinityMediaItemResolutionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResolutionResult"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "UpdateMediaAffinityMediaItemResolutionResult"
            ]
          },
          "success": {
            "type": "object",
            "properties": {
              "resolvedMediaItem": {
                "$ref": "#/components/schemas/MediaItem"
              }
            },
            "required": [
              "resolvedMediaItem"
            ]
          },
          "disambiguation": {
            "type": "object",
            "properties": {
              "mediaItemsToDisambiguate": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MediaItem"
                },
                "minItems": 2
              }
            },
            "required": [
              "mediaItemsToDisambiguate"
            ]
          },
          "confirmationRequired": {
            "type": "object",
            "properties": {
              "mediaItemToConfirm": {
                "$ref": "#/components/schemas/MediaItem"
              }
            },
            "required": [
              "mediaItemToConfirm"
            ],
            "x-flow-exception": "Requires Confirmation"
          },
          "unsupported": {
            "type": "object",
            "properties": {
              "reason": {
                "$ref": "#/components/schemas/UpdateMediaAffinityMediaItemUnsupportedReason"
              }
            },
            "x-flow-exception": "Unsupported"
          }
        }
      },
      "MediaAffinityTypeResolutionResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IntentResolutionResult"
          }
        ],
        "type": "object",
        "properties": {
          "class": {
            "type": "string",
            "enum": [
              "MediaAffinityTypeResolutionResult"
            ]
          },
          "success": {
            "type": "object",
            "properties": {
              "resolvedMediaAffinityType": {
                "$ref": "#/components/schemas/MediaAffinityType"
              }
            },
            "required": [
              "resolvedMediaAffinityType"
            ]
          },
          "confirmationRequired": {
            "type": "object",
            "properties": {
              "mediaAffinityTypeToConfirm": {
                "$ref": "#/components/schemas/MediaAffinityType"
              }
            },
            "required": [
              "mediaAffinityTypeToConfirm"
            ],
            "x-flow-exception": "Requires Confirmation"
          }
        }
      },
      "PlayerContext": {
        "type": "object",
        "properties": {
          "activityIdentifier": {
            "type": "string",
            "maxLength": 250
          },
          "queueIdentifier": {
            "$ref": "#/components/schemas/QueueIdentifier"
          },
          "contentIdentifier": {
            "$ref": "#/components/schemas/ContentIdentifier"
          },
          "offsetInMillis": {
            "type": "integer",
            "format": "int64",
            "example": 10942
          },
          "playbackSpeed": {
            "type": "number",
            "format": "double",
            "default": 1.0
          }
        }
      },
      "Constraints": {
        "type": "object",
        "properties": {
          "updateUserTasteProfile": {
            "type": "boolean",
            "default": true
          },
          "allowExplicitContent": {
            "type": "boolean",
            "default": true
          },
          "maximumQueueSegmentItemCount": {
            "type": "integer",
            "minimum": 50,
            "maximum": 1000,
            "default": 1000
          }
        }
      },
      "Session": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128
          },
          "version": {
            "type": "string",
            "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+"
          },
          "constraints": {
            "$ref": "#/components/schemas/Constraints"
          },
          "playerContext": {
            "$ref": "#/components/schemas/PlayerContext"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "requested": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "version",
          "identifier",
          "constraints",
          "deadline",
          "requested"
        ]
      },
      "Invocation": {
        "type": "object",
        "properties": {
          "session": {
            "$ref": "#/components/schemas/Session"
          },
          "method": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "nullable": true
          }
        },
        "required": [
          "method",
          "params"
        ],
        "discriminator": {
          "propertyName": "method",
          "mapping": {
            "PlayMediaIntentHandling.resolveMediaItems": "#/components/schemas/PlayMediaIntentHandlingInvocation",
            "PlayMediaIntentHandling.resolvePlayShuffled": "#/components/schemas/PlayMediaIntentHandlingInvocation",
            "PlayMediaIntentHandling.resolvePlaybackQueueLocation": "#/components/schemas/PlayMediaIntentHandlingInvocation",
            "PlayMediaIntentHandling.resolvePlaybackRepeatMode": "#/components/schemas/PlayMediaIntentHandlingInvocation",
            "PlayMediaIntentHandling.resolveResumePlayback": "#/components/schemas/PlayMediaIntentHandlingInvocation",
            "PlayMediaIntentHandling.handle": "#/components/schemas/PlayMediaIntentHandlingInvocation",
            "AddMediaIntentHandling.resolveMediaItems": "#/components/schemas/AddMediaIntentHandlingInvocation",
            "AddMediaIntentHandling.resolveMediaDestination": "#/components/schemas/AddMediaIntentHandlingInvocation",
            "AddMediaIntentHandling.confirm": "#/components/schemas/AddMediaIntentHandlingInvocation",
            "AddMediaIntentHandling.handle": "#/components/schemas/AddMediaIntentHandlingInvocation",
            "UpdateMediaAffinityIntentHandling.resolveMediaItems": "#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation",
            "UpdateMediaAffinityIntentHandling.resolveAffinityType": "#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation",
            "UpdateMediaAffinityIntentHandling.handle": "#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation"
          }
        }
      },
      "ExecutionMetrics": {
        "type": "object",
        "properties": {
          "received": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "number",
            "format": "float"
          },
          "completed": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InvocationResponse": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string"
          },
          "result": {
            "type": "object",
            "nullable": true
          },
          "metrics": {
            "$ref": "#/components/schemas/ExecutionMetrics"
          },
          "debug": {
            "$ref": "#/components/schemas/ServiceDebugReference"
          }
        },
        "discriminator": {
          "propertyName": "method",
          "mapping": {
            "PlayMediaIntentHandling.resolveMediaItems": "#/components/schemas/PlayMediaIntentHandlingResolveMediaItemsInvocationResponse",
            "PlayMediaIntentHandling.resolvePlayShuffled": "#/components/schemas/PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse",
            "PlayMediaIntentHandling.resolvePlaybackQueueLocation": "#/components/schemas/PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse",
            "PlayMediaIntentHandling.resolvePlaybackRepeatMode": "#/components/schemas/PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse",
            "PlayMediaIntentHandling.resolveResumePlayback": "#/components/schemas/PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse",
            "PlayMediaIntentHandling.handle": "#/components/schemas/PlayMediaIntentHandlingHandleInvocationResponse",
            "AddMediaIntentHandling.resolveMediaItems": "#/components/schemas/AddMediaIntentHandlingResolveMediaItemsInvocationResponse",
            "AddMediaIntentHandling.resolveMediaDestination": "#/components/schemas/AddMediaIntentHandlingResolveMediaDestinationInvocationResponse",
            "AddMediaIntentHandling.confirm": "#/components/schemas/AddMediaIntentHandlingConfirmInvocationResponse",
            "AddMediaIntentHandling.handle": "#/components/schemas/AddMediaIntentHandlingHandleInvocationResponse",
            "UpdateMediaAffinityIntentHandling.resolveMediaItems": "#/components/schemas/UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse",
            "UpdateMediaAffinityIntentHandling.resolveAffinityType": "#/components/schemas/UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse",
            "UpdateMediaAffinityIntentHandling.handle": "#/components/schemas/UpdateMediaAffinityIntentHandlingHandleInvocationResponse",
            "ProtocolException": "#/components/schemas/ProtocolExceptionInvocationResponse"
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "PlayMediaIntentHandlingInvocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Invocation"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "PlayMediaIntentHandling.resolveMediaItems",
              "PlayMediaIntentHandling.resolvePlayShuffled",
              "PlayMediaIntentHandling.resolvePlaybackQueueLocation",
              "PlayMediaIntentHandling.resolvePlaybackRepeatMode",
              "PlayMediaIntentHandling.resolveResumePlayback",
              "PlayMediaIntentHandling.handle"
            ]
          },
          "params": {
            "type": "object",
            "properties": {
              "intent": {
                "$ref": "#/components/schemas/PlayMediaIntent"
              }
            },
            "required": [
              "intent"
            ],
            "nullable": false
          }
        },
        "required": [
          "params",
          "method"
        ]
      },
      "PlayMediaIntentHandlingInvocationResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PlayMediaIntentHandlingResolveMediaItemsInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/PlayMediaIntentHandlingHandleInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/ProtocolExceptionInvocationResponse"
          }
        ],
        "discriminator": {
          "propertyName": "method",
          "mapping": {
            "PlayMediaIntentHandling.resolveMediaItems": "#/components/schemas/PlayMediaIntentHandlingResolveMediaItemsInvocationResponse",
            "PlayMediaIntentHandling.resolvePlayShuffled": "#/components/schemas/PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse",
            "PlayMediaIntentHandling.resolvePlaybackQueueLocation": "#/components/schemas/PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse",
            "PlayMediaIntentHandling.resolvePlaybackRepeatMode": "#/components/schemas/PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse",
            "PlayMediaIntentHandling.resolveResumePlayback": "#/components/schemas/PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse",
            "PlayMediaIntentHandling.handle": "#/components/schemas/PlayMediaIntentHandlingHandleInvocationResponse",
            "ProtocolException": "#/components/schemas/ProtocolExceptionInvocationResponse"
          }
        }
      },
      "PlayMediaIntentHandlingResolveMediaItemsInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "PlayMediaIntentHandling.resolveMediaItems"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "resolutionResult": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlayMediaMediaItemResolutionResult"
                }
              }
            },
            "required": [
              "resolutionResult"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "PlayMediaIntentHandlingResolvePlayShuffledInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "PlayMediaIntentHandling.resolvePlayShuffled"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "resolutionResult": {
                "$ref": "#/components/schemas/BooleanResolutionResult"
              }
            },
            "required": [
              "resolutionResult"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "PlayMediaIntentHandlingResolvePlaybackQueueLocationInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "PlayMediaIntentHandling.resolvePlaybackQueueLocation"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "resolutionResult": {
                "$ref": "#/components/schemas/PlaybackQueueLocationResolutionResult"
              }
            },
            "required": [
              "resolutionResult"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "PlayMediaIntentHandlingResolvePlaybackRepeatModeInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "PlayMediaIntentHandling.resolvePlaybackRepeatMode"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "resolutionResult": {
                "$ref": "#/components/schemas/PlaybackRepeatModeResolutionResult"
              }
            },
            "required": [
              "resolutionResult"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "PlayMediaIntentHandlingResolveResumePlaybackInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "PlayMediaIntentHandling.resolveResumePlayback"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "resolutionResult": {
                "$ref": "#/components/schemas/BooleanResolutionResult"
              }
            },
            "required": [
              "resolutionResult"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "PlayMediaIntentHandlingHandleInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "PlayMediaIntentHandling.handle"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "response": {
                "$ref": "#/components/schemas/PlayMediaIntentResponse"
              }
            },
            "required": [
              "response"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "AddMediaIntentHandlingResolveMediaItemsInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "AddMediaIntentHandling.resolveMediaItems"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "resolutionResult": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddMediaMediaItemResolutionResult"
                }
              }
            },
            "required": [
              "response"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "AddMediaIntentHandlingInvocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Invocation"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "AddMediaIntentHandling.resolveMediaItems",
              "AddMediaIntentHandling.resolveMediaDestination",
              "AddMediaIntentHandling.confirm",
              "AddMediaIntentHandling.handle"
            ]
          },
          "params": {
            "type": "object",
            "properties": {
              "intent": {
                "$ref": "#/components/schemas/AddMediaIntent"
              }
            },
            "required": [
              "intent"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "params"
        ],
        "discriminator": {
          "propertyName": "method",
          "mapping": {
            "AddMediaIntentHandling.resolveMediaItems": "#/components/schemas/AddMediaIntentHandlingInvocation",
            "AddMediaIntentHandling.resolveMediaDestination": "#/components/schemas/AddMediaIntentHandlingInvocation",
            "AddMediaIntentHandling.confirm": "#/components/schemas/AddMediaIntentHandlingInvocation",
            "AddMediaIntentHandling.handle": "#/components/schemas/AddMediaIntentHandlingInvocation"
          }
        }
      },
      "AddMediaIntentHandlingInvocationResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AddMediaIntentHandlingResolveMediaItemsInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/AddMediaIntentHandlingResolveMediaDestinationInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/AddMediaIntentHandlingConfirmInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/AddMediaIntentHandlingHandleInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/ProtocolExceptionInvocationResponse"
          }
        ],
        "discriminator": {
          "propertyName": "method",
          "mapping": {
            "AddMediaIntentHandling.resolveMediaItems": "#/components/schemas/AddMediaIntentHandlingResolveMediaItemsInvocationResponse",
            "AddMediaIntentHandling.resolveMediaDestination": "#/components/schemas/AddMediaIntentHandlingResolveMediaDestinationInvocationResponse",
            "AddMediaIntentHandling.confirm": "#/components/schemas/AddMediaIntentHandlingConfirmInvocationResponse",
            "AddMediaIntentHandling.handle": "#/components/schemas/AddMediaIntentHandlingHandleInvocationResponse",
            "ProtocolException": "#/components/schemas/ProtocolExceptionInvocationResponse"
          }
        }
      },
      "AddMediaIntentHandlingResolveMediaDestinationInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "AddMediaIntentHandling.resolveMediaDestination"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "resolutionResult": {
                "$ref": "#/components/schemas/AddMediaMediaDestinationResolutionResult"
              }
            },
            "required": [
              "response"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "AddMediaIntentHandlingConfirmInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "AddMediaIntentHandling.confirm"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "response": {
                "$ref": "#/components/schemas/AddMediaIntentResponse"
              }
            },
            "required": [
              "response"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "AddMediaIntentHandlingHandleInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "AddMediaIntentHandling.handle"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "response": {
                "$ref": "#/components/schemas/AddMediaIntentResponse"
              }
            },
            "required": [
              "response"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "UpdateMediaAffinityIntentHandlingInvocation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Invocation"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "UpdateMediaAffinityIntentHandling.resolveMediaItems",
              "UpdateMediaAffinityIntentHandling.resolveAffinityType",
              "UpdateMediaAffinityIntentHandling.handle"
            ]
          },
          "params": {
            "type": "object",
            "properties": {
              "intent": {
                "$ref": "#/components/schemas/UpdateMediaAffinityIntent"
              }
            },
            "required": [
              "intent"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "params"
        ],
        "discriminator": {
          "propertyName": "method",
          "mapping": {
            "UpdateMediaAffinityIntentHandling.resolveMediaItems": "#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation",
            "UpdateMediaAffinityIntentHandling.resolveAffinityType": "#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation",
            "UpdateMediaAffinityIntentHandling.handle": "#/components/schemas/UpdateMediaAffinityIntentHandlingInvocation"
          }
        }
      },
      "UpdateMediaAffinityIntentHandlingInvocationResponse": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/UpdateMediaAffinityIntentHandlingHandleInvocationResponse"
          },
          {
            "$ref": "#/components/schemas/ProtocolExceptionInvocationResponse"
          }
        ],
        "discriminator": {
          "propertyName": "method",
          "mapping": {
            "UpdateMediaAffinityIntentHandling.resolveMediaItems": "#/components/schemas/UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse",
            "UpdateMediaAffinityIntentHandling.resolveAffinityType": "#/components/schemas/UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse",
            "UpdateMediaAffinityIntentHandling.handle": "#/components/schemas/UpdateMediaAffinityIntentHandlingHandleInvocationResponse",
            "ProtocolException": "#/components/schemas/ProtocolExceptionInvocationResponse"
          }
        }
      },
      "UpdateMediaAffinityIntentHandlingResolveMediaItemsInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "UpdateMediaAffinityIntentHandling.resolveMediaItems"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "resolutionResult": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateMediaAffinityMediaItemResolutionResult"
                }
              }
            },
            "required": [
              "resolutionResult"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "UpdateMediaAffinityIntentHandlingResolveAffinityTypeInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "UpdateMediaAffinityIntentHandling.resolveAffinityType"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "resolutionResult": {
                "$ref": "#/components/schemas/MediaAffinityTypeResolutionResult"
              }
            },
            "required": [
              "resolutionResult"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "UpdateMediaAffinityIntentHandlingHandleInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "UpdateMediaAffinityIntentHandling.handle"
            ]
          },
          "result": {
            "type": "object",
            "properties": {
              "response": {
                "$ref": "#/components/schemas/UpdateMediaAffinityIntentResponse"
              }
            },
            "required": [
              "response"
            ],
            "nullable": false
          }
        },
        "required": [
          "method",
          "result"
        ]
      },
      "ExtensionConfigTag": {
        "type": "string",
        "pattern": "[\"][ -~]{1000}[\"]",
        "maxLength": 1002
      },
      "ExtensionEndpointConfig": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          },
          "hdr": {
            "type": "object"
          }
        }
      },
      "ExtensionConfig": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "pattern": "([0-9]+[.]){2}[0-9]+",
            "example": "1.0.0"
          },
          "url": {
            "type": "string",
            "example": "/v2",
            "minLength": 1,
            "maxLength": 2000
          },
          "hdr": {
            "type": "object",
            "example": {
              "x-service-affinity": "cluster1",
              "x-client-type": "headless"
            }
          },
          "intent": {
            "type": "object",
            "properties": {
              "hdr": {
                "type": "object",
                "example": {
                  "x-service-affinity": "intent2"
                }
              },
              "playMedia": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExtensionEndpointConfig"
                  }
                ],
                "type": "object",
                "properties": {
                  "opt": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "resolvePlayShuffled",
                        "resolvePlaybackRepeatMode",
                        "resolvePlaybackQueueLocation",
                        "resolveResumePlayback"
                      ]
                    }
                  }
                }
              },
              "addMedia": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExtensionEndpointConfig"
                  }
                ],
                "type": "object",
                "properties": {
                  "opt": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "resolveMediaDestination",
                        "confirm"
                      ]
                    }
                  }
                }
              },
              "updateMediaAffinity": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ExtensionEndpointConfig"
                  }
                ],
                "type": "object",
                "properties": {
                  "opt": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "resolveAffinityType"
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "playMedia"
            ]
          },
          "media": {
            "type": "object",
            "properties": {
              "queues": {
                "type": "object",
                "properties": {
                  "hdr": {
                    "type": "object",
                    "example": {
                      "x-media-catalog-region": "en_US",
                      "x-content-min-ttl": 1200
                    }
                  },
                  "playMedia": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "default": "/queues/playMedia",
                        "minLength": 1,
                        "maxLength": 4000
                      },
                      "hdr": {
                        "type": "object",
                        "example": {
                          "x-headless-client": true
                        }
                      }
                    }
                  },
                  "updateActivity": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "default": "/queues/updateActivity",
                        "minLength": 1,
                        "maxLength": 4000
                      },
                      "hdr": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "version",
          "intent",
          "media"
        ]
      },
      "ProtocolExceptionReason": {
        "type": "string",
        "enum": [
          "unsupported",
          "unauthorized",
          "unexpected",
          "invalid",
          "unparseable",
          "deprecated",
          "internal",
          "complex",
          "busy"
        ]
      },
      "ProtocolException": {
        "type": "object",
        "properties": {
          "methodName": {
            "type": "string"
          },
          "methodIndex": {
            "type": "integer",
          },
          "reason": {
            "$ref": "#/components/schemas/ProtocolExceptionReason"
          },
          "code": {
            "type": "integer",
            "format": "int64"
          },
          "retryWithDelay": {
            "type": "number",
            "format": "float",
            "default": -1.0
          },
          "trace": {
            "type": "array",
            "maxItems": 64,
            "items": {
              "type": "string",
              "maxLength": 1000
            }
          }
        },
        "required": [
          "reason"
        ]
      },
      "ProtocolExceptionInvocationResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/InvocationResponse"
          }
        ],
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "ProtocolException"
            ]
          },
          "exception": {
            "$ref": "#/components/schemas/ProtocolException"
          }
        },
        "required": [
          "method",
          "exception"
        ]
      },
      "UserActivity": {
        "type": "object",
        "nullable": true,
        "properties": {
          "version": {
            "type": "string",
            "pattern": "[0-9]+\\.[0-9]+\\.[0-9]+",
            "maxLength": 25
          },
          "activityType": {
            "type": "string",
            "example": "com.mediastreamingservice.playmedia",
            "maxLength": 250
          },
          "title": {
            "type": "string",
            "maxLength": 250
          },
          "persistentIdentifier": {
            "type": "string",
            "maxLength": 250
          },
          "userInfo": {
            "title": "UserActivityUserInfo",
            "type": "object"
          }
        },
        "required": [
          "version",
          "activityType"
        ]
      }
    }
  }
}
